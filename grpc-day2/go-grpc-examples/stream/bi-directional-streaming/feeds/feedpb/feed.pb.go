// Code generated by protoc-gen-go. DO NOT EDIT.
// source: feedpb/feed.proto

package feedpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FeedRequest struct {
	Feed                 string   `protobuf:"bytes,1,opt,name=feed,proto3" json:"feed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FeedRequest) Reset()         { *m = FeedRequest{} }
func (m *FeedRequest) String() string { return proto.CompactTextString(m) }
func (*FeedRequest) ProtoMessage()    {}
func (*FeedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f16430a1c811a54, []int{0}
}

func (m *FeedRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeedRequest.Unmarshal(m, b)
}
func (m *FeedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeedRequest.Marshal(b, m, deterministic)
}
func (m *FeedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeedRequest.Merge(m, src)
}
func (m *FeedRequest) XXX_Size() int {
	return xxx_messageInfo_FeedRequest.Size(m)
}
func (m *FeedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FeedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FeedRequest proto.InternalMessageInfo

func (m *FeedRequest) GetFeed() string {
	if m != nil {
		return m.Feed
	}
	return ""
}

type FeedResponse struct {
	Feed                 string   `protobuf:"bytes,1,opt,name=feed,proto3" json:"feed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FeedResponse) Reset()         { *m = FeedResponse{} }
func (m *FeedResponse) String() string { return proto.CompactTextString(m) }
func (*FeedResponse) ProtoMessage()    {}
func (*FeedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f16430a1c811a54, []int{1}
}

func (m *FeedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeedResponse.Unmarshal(m, b)
}
func (m *FeedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeedResponse.Marshal(b, m, deterministic)
}
func (m *FeedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeedResponse.Merge(m, src)
}
func (m *FeedResponse) XXX_Size() int {
	return xxx_messageInfo_FeedResponse.Size(m)
}
func (m *FeedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FeedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FeedResponse proto.InternalMessageInfo

func (m *FeedResponse) GetFeed() string {
	if m != nil {
		return m.Feed
	}
	return ""
}

func init() {
	proto.RegisterType((*FeedRequest)(nil), "feedpb.FeedRequest")
	proto.RegisterType((*FeedResponse)(nil), "feedpb.FeedResponse")
}

func init() {
	proto.RegisterFile("feedpb/feed.proto", fileDescriptor_2f16430a1c811a54)
}

var fileDescriptor_2f16430a1c811a54 = []byte{
	// 139 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4c, 0x4b, 0x4d, 0x4d,
	0x29, 0x48, 0xd2, 0x07, 0x51, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0x6c, 0x10, 0x21, 0x25,
	0x45, 0x2e, 0x6e, 0xb7, 0xd4, 0xd4, 0x94, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x21, 0x21,
	0x2e, 0x16, 0x90, 0x84, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x67, 0x10, 0x98, 0xad, 0xa4, 0xc4, 0xc5,
	0x03, 0x51, 0x52, 0x5c, 0x90, 0x9f, 0x57, 0x9c, 0x8a, 0x4d, 0x8d, 0x91, 0x2b, 0x17, 0x2b, 0x48,
	0x4d, 0xb1, 0x90, 0x0d, 0x17, 0xa7, 0x53, 0x51, 0x7e, 0x62, 0x4a, 0x72, 0x62, 0x71, 0x89, 0x90,
	0xb0, 0x1e, 0xc4, 0x16, 0x3d, 0x24, 0x2b, 0xa4, 0x44, 0x50, 0x05, 0x21, 0x86, 0x2a, 0x31, 0x68,
	0x30, 0x1a, 0x30, 0x3a, 0x71, 0x44, 0x41, 0xdd, 0x95, 0xc4, 0x06, 0x76, 0xa6, 0x31, 0x20, 0x00,
	0x00, 0xff, 0xff, 0x2d, 0xbb, 0x72, 0xd6, 0xbb, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FeedsClient is the client API for Feeds service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FeedsClient interface {
	// bi-directional rpc
	Broadcast(ctx context.Context, opts ...grpc.CallOption) (Feeds_BroadcastClient, error)
}

type feedsClient struct {
	cc grpc.ClientConnInterface
}

func NewFeedsClient(cc grpc.ClientConnInterface) FeedsClient {
	return &feedsClient{cc}
}

func (c *feedsClient) Broadcast(ctx context.Context, opts ...grpc.CallOption) (Feeds_BroadcastClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Feeds_serviceDesc.Streams[0], "/feedpb.Feeds/Broadcast", opts...)
	if err != nil {
		return nil, err
	}
	x := &feedsBroadcastClient{stream}
	return x, nil
}

type Feeds_BroadcastClient interface {
	Send(*FeedRequest) error
	Recv() (*FeedResponse, error)
	grpc.ClientStream
}

type feedsBroadcastClient struct {
	grpc.ClientStream
}

func (x *feedsBroadcastClient) Send(m *FeedRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *feedsBroadcastClient) Recv() (*FeedResponse, error) {
	m := new(FeedResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// FeedsServer is the server API for Feeds service.
type FeedsServer interface {
	// bi-directional rpc
	Broadcast(Feeds_BroadcastServer) error
}

// UnimplementedFeedsServer can be embedded to have forward compatible implementations.
type UnimplementedFeedsServer struct {
}

func (*UnimplementedFeedsServer) Broadcast(srv Feeds_BroadcastServer) error {
	return status.Errorf(codes.Unimplemented, "method Broadcast not implemented")
}

func RegisterFeedsServer(s *grpc.Server, srv FeedsServer) {
	s.RegisterService(&_Feeds_serviceDesc, srv)
}

func _Feeds_Broadcast_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(FeedsServer).Broadcast(&feedsBroadcastServer{stream})
}

type Feeds_BroadcastServer interface {
	Send(*FeedResponse) error
	Recv() (*FeedRequest, error)
	grpc.ServerStream
}

type feedsBroadcastServer struct {
	grpc.ServerStream
}

func (x *feedsBroadcastServer) Send(m *FeedResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *feedsBroadcastServer) Recv() (*FeedRequest, error) {
	m := new(FeedRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Feeds_serviceDesc = grpc.ServiceDesc{
	ServiceName: "feedpb.Feeds",
	HandlerType: (*FeedsServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Broadcast",
			Handler:       _Feeds_Broadcast_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "feedpb/feed.proto",
}
